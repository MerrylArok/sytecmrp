-- Creating custom user roles
create type user_role as enum ('USER', 'ADMIN', 'DEV');

-- Creating departments
create table public.departments(
  id uuid default uuid_generate_v4() primary key,
  name text not null 
);

-- Creating profiles
create table public.profiles(
  id uuid references auth.users on delete cascade primary key,
  role user_role default 'USER',
  full_name text not null,
  employee_number numeric(4,0) not null,
  phone_number numeric(10,0) check (phone_number >= 1000000000 and phone_number <= 9999999999),
  email text check (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
  emergency_phone_number numeric(10,0) check (emergency_phone_number >= 1000000000 and emergency_phone_number <= 9999999999),
  vending_machine_number numeric,
  date_start date
);

--Assign user to departments
create table public.profile_departments(
  profile_id uuid references public.profiles(id) on delete cascade,
  department_id uuid references public.departments(id) on delete cascade,
  priority_number numeric(2,0) not null,
  primary key (profile_id, department_id)
);

-- Enable RLS
alter table public.departments enable row level security;
alter table public.profiles enable row level security;

--Create policies for profiles
create policy "Profiles can be READ by everyone"
on profiles for select
to authenticated
using (true);


